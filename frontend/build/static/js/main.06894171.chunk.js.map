{"version":3,"sources":["components/home/smallImage.js","components/home/home.js","components/navbar/navbar.js","components/signup/SignUp.js","components/login/Login.js","components/upload/Upload.js","components/imageView/commentSection.js","components/imageView/normalImage.js","components/private/smallImage.js","components/private/myimages.js","App.js","serviceWorker.js","index.js"],"names":["SmallImage","props","state","linkPath","src","imageName","to","this","className","React","Component","Homepage","handleSocket","a","socket","io","setState","on","data","imageList","unshift","name","forceUpdate","getSmallImages","axios","get","newImageList","console","log","disconnect","map","image","key","myNavbar","handleLogout","event","preventDefault","history","localStorage","removeItem","setAuthFalse","redirect","renderRedirect","isAuth","Navbar","Nav","exact","onClick","SignUp","handleUsernameChange","username","target","value","handlePasswordChange","password","handleSubmit","post","res","setItem","token","setAuthTrue","response","status","error","msg","onChange","placeholder","type","style","color","LogIn","Upload","handleImageSelect","file","files","handleUpload","formdata","FormData","append","headers","getItem","uploadCompleted","CommentBox","comment","CommentSection","getImageData","likes","dislikes","comments","emit","room","handleTextAreaChange","text","handleSubmitButton","auth_token","document","getElementById","handleLike","vote","handleDislike","id","_id","NormalImage","queryString","parse","location","search","App","componentDidMount","user","bind","path","component","MyImages","Boolean","window","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.06894171.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './home.css'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass SmallImage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            linkPath: '/image?name=' + props.src,\r\n            imageName: '/api/getsmall/' + props.src\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Link to={this.state.linkPath}>\r\n                <img src={this.state.imageName} className=\"contentThumbnail\" />\r\n            </Link>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SmallImage;","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport io from \"socket.io-client\";\r\n\r\nimport SmallImage from './smallImage'\r\nimport './home.css'\r\n\r\nclass Homepage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            socket: null,\r\n            imageList: null\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.state.socket) {\r\n            this.state.socket.disconnect();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getSmallImages();\r\n        this.handleSocket();\r\n    }\r\n\r\n    handleSocket = async () => {\r\n        var socket = io('/homesystem');\r\n\r\n        this.setState({\r\n            socket: socket\r\n        });\r\n\r\n        socket.on('newUpload', async (data) => {\r\n            var imageList = this.state.imageList;\r\n\r\n            imageList.unshift({ name: data.imageName });\r\n\r\n            this.setState({\r\n                imageList: imageList\r\n            });\r\n            this.forceUpdate();\r\n        });\r\n    }\r\n\r\n    getSmallImages = async () => {\r\n        var newImageList = await axios.get('/api/getsmall');\r\n        console.log(newImageList.data);\r\n        this.setState({ imageList: newImageList.data });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.imageList) {\r\n            return (\r\n                <div className=\"contentContainer\">\r\n                    {this.state.imageList.map((image) => <SmallImage key={image.name} src={image.name} />)}\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <div>Loading...</div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default Homepage;","import React from 'react';\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './navbar.css'\r\n\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass myNavbar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            redirect: null\r\n        }\r\n    }\r\n\r\n    handleLogout = (event) => {\r\n        event.preventDefault();\r\n        console.log(this.props.history)\r\n        localStorage.removeItem('token');\r\n        this.props.setAuthFalse();\r\n        this.setState({ redirect: '/' });\r\n    }\r\n\r\n    renderRedirect = () => {\r\n        if (this.state.redirect) {\r\n            this.setState({ redirect: null })\r\n            return <Redirect to={this.state.redirect} />\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.redirect) {\r\n            return (\r\n                <div>\r\n                    {this.renderRedirect()}\r\n                </div>\r\n\r\n            );\r\n        }\r\n        if (this.props.isAuth) {\r\n            return (\r\n                <Navbar className='navColor'>\r\n                    <Nav className='mr-auto'>\r\n                        <NavLink exact to='/' className='nav-link navColorChange'>Home</NavLink>\r\n                        <NavLink exact to='/upload' className='nav-link navColorChange'>Upload</NavLink>\r\n                        <NavLink exact to='/myimages' className='nav-link navColorChange'>My-Images</NavLink>\r\n                    </Nav>\r\n                    <Nav>\r\n                        <NavLink onClick={this.handleLogout} to='/' className='nav-link navColorChange'>Logout</NavLink>\r\n                    </Nav>\r\n                </Navbar>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <Navbar className='navColor'>\r\n                <Nav className='mr-auto'>\r\n                    <NavLink exact to='/' className='nav-link navColorChange'>Home</NavLink>\r\n                </Nav>\r\n                <Nav>\r\n                    <NavLink exact to='/login' className='nav-link navColorChange'>Login</NavLink>\r\n                    <NavLink exact to='/signup' className='nav-link navColorChange'>Sign Up</NavLink>\r\n                </Nav>\r\n            </Navbar>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default myNavbar;","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './SignUp.css';\r\n\r\nclass SignUp extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            error: null,\r\n            redirect: null\r\n        }\r\n    }\r\n\r\n    handleUsernameChange = (event) => {\r\n        this.setState({\r\n            username: event.target.value\r\n        });\r\n    }\r\n\r\n    handlePasswordChange = (event) => {\r\n        this.setState({\r\n            password: event.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        try {\r\n            var res = await axios.post('/api/usercontroller/register', {\r\n                username: this.state.username,\r\n                password: this.state.password\r\n            });\r\n            localStorage.setItem('token', res.data.token);\r\n            this.props.setAuthTrue();\r\n            this.setState({\r\n                redirect: '/'\r\n            });\r\n        }\r\n        catch (err) {\r\n            console.log(err);\r\n            console.log(err.response);\r\n            if (err.response.status === 400) {\r\n                this.setState({\r\n                    error: err.response.data.msg\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.redirect) {\r\n            return <Redirect to={this.state.redirect} />\r\n        }\r\n        return (\r\n            <div className=\"container-fluid h-100\">\r\n                <div className=\"row justify-content-center align-items-center h-100\">\r\n                    <div className=\"col col-sm-6 col-md-6 col-lg-4 col-xl-3 specialBox\">\r\n                        <h3>Sign Up Form</h3>\r\n                        <input onChange={this.handleUsernameChange} className=\"form-control form-control-lg\" placeholder=\"Username\" type=\"text\" />\r\n                        <input onChange={this.handlePasswordChange} className=\"form-control form-control-lg\" placeholder=\"Password\" type=\"password\" />\r\n                        <p style={{ color: 'red' }}>{this.state.error}</p>\r\n                        <button onClick={this.handleSubmit} className=\"btn-lg btn-block signupButton\">Sign Up</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignUp;","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './Login.css';\r\n\r\nclass LogIn extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            error: null,\r\n            redirect: null\r\n        }\r\n    }\r\n\r\n    handleUsernameChange = (event) => {\r\n        this.setState({\r\n            username: event.target.value\r\n        });\r\n    }\r\n\r\n    handlePasswordChange = (event) => {\r\n        this.setState({\r\n            password: event.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        try {\r\n            var res = await axios.post('/api/usercontroller/login', {\r\n                username: this.state.username,\r\n                password: this.state.password\r\n            });\r\n            localStorage.setItem('token', res.data.token);\r\n            this.props.setAuthTrue();\r\n            this.setState({\r\n                redirect: '/'\r\n            });\r\n        }\r\n        catch (err) {\r\n            console.log(err);\r\n            console.log(err.response);\r\n            if (err.response.status === 400) {\r\n                this.setState({\r\n                    error: err.response.data.msg\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.redirect) {\r\n            return <Redirect to={this.state.redirect} />\r\n        }\r\n        return (\r\n            <div className=\"container-fluid h-100\">\r\n                <div className=\"row justify-content-center align-items-center h-100\">\r\n                    <div className=\"col col-sm-6 col-md-6 col-lg-4 col-xl-3 specialBox\">\r\n                        <h3>Log In Form</h3>\r\n                        <input onChange={this.handleUsernameChange} className=\"form-control form-control-lg\" placeholder=\"Username\" type=\"text\" />\r\n                        <input onChange={this.handlePasswordChange} className=\"form-control form-control-lg\" placeholder=\"Password\" type=\"password\" />\r\n                        <p style={{ color: 'red' }}>{this.state.error}</p>\r\n                        <button onClick={this.handleSubmit} className=\"btn-lg btn-block loginButton\">Log In</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LogIn;","import React from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './Upload.css'\r\n\r\n\r\nclass Upload extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            file: null,\r\n            uploadCompleted: null,\r\n            error: null\r\n        }\r\n    }\r\n\r\n    handleImageSelect = (event) => {\r\n        this.setState({\r\n            file: event.target.files[0]\r\n        });\r\n    }\r\n\r\n    handleUpload = async () => {\r\n        var formdata = new FormData();\r\n        formdata.append('image', this.state.file);\r\n\r\n        try {\r\n            var res = await axios.post('/api/upload', formdata, {\r\n                headers: {\r\n                    'x-auth-token': localStorage.getItem('token')\r\n                }\r\n            });\r\n            console.log(res.data.name);\r\n            this.setState({\r\n                uploadCompleted: res.data.name\r\n            });\r\n        }\r\n        catch (err) {\r\n            // console.log(err);\r\n            // console.log(err.response);\r\n\r\n            if (err.response.status === 401) {\r\n                this.setState({\r\n                    error: err.response.data.msg\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        if (this.state.uploadCompleted) {\r\n            return <Redirect to={'/image?name=' + this.state.uploadCompleted} />;\r\n        }\r\n\r\n        return (\r\n            <div className=\"container-fluid h-100\">\r\n                <div className=\"row justify-content-center align-items-center h-100\">\r\n                    <div className=\"col col-sm-6 col-md-6 col-lg-4 col-xl-3 specialBox\">\r\n                        <h3>Upload Form</h3>\r\n                        <input type=\"file\" className=\"form-control form-control-lg\" onChange={this.handleImageSelect} />\r\n                        <p style={{ color: 'red' }}>{this.state.error}</p>\r\n                        <button className=\"btn-lg btn-block uploadButton\" onClick={this.handleUpload}>Upload</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Upload;","import React from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport axios from 'axios';\r\n\r\nimport \"./imagePage.css\";\r\n\r\nclass CommentSection extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            imageName: props.imageName,\r\n            username: null,\r\n            likes: null,\r\n            dislikes: null,\r\n            text: null,\r\n            socket: null,\r\n            comments: []\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.state.socket) {\r\n            this.state.socket.disconnect();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getImageData();\r\n        this.handleSocket();\r\n    }\r\n\r\n    getImageData = async () => {\r\n        try {\r\n            var res = await axios.get('/api/imagedata/' + this.state.imageName);\r\n            var data = res.data;\r\n            this.setState({\r\n                username: data.username.username,\r\n                likes: data.likes,\r\n                dislikes: data.dislikes,\r\n                comments: data.comments\r\n            })\r\n        }\r\n        catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    handleSocket = async () => {\r\n        var socket = io('/commentsystem');\r\n        socket.on('connect', async (data) => {\r\n            socket.emit('joinRoom', { room: this.state.imageName });\r\n        });\r\n        socket.on('newComment', async (data) => {\r\n            var comments = this.state.comments;\r\n            comments.unshift(data);\r\n\r\n            this.setState({\r\n                comments: comments\r\n            })\r\n\r\n        });\r\n        socket.on('newVote', async (data) => {\r\n            this.setState({\r\n                likes: data.likes,\r\n                dislikes: data.dislikes\r\n            })\r\n        });\r\n        this.setState({ socket: socket });\r\n    }\r\n\r\n    handleTextAreaChange = async (event) => {\r\n        event.preventDefault();\r\n        this.setState({ text: event.target.value });\r\n    }\r\n\r\n    handleSubmitButton = async () => {\r\n        try {\r\n            var res = await axios.post('/api/imagedata/newcomment', {\r\n                auth_token: localStorage.getItem('token'),\r\n                imageName: this.state.imageName,\r\n                comment: this.state.text\r\n            });\r\n            // console.log(res.status)\r\n            if (res.status === 200) {\r\n                this.setState({\r\n                    text: null\r\n                });\r\n                document.getElementById(\"commentTextArea\").value = '';\r\n            }\r\n        }\r\n        catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    handleLike = async () => {\r\n\r\n        if (localStorage.getItem('token')) {\r\n            try {\r\n                var res = await axios.post('/api/imagedata/vote', {\r\n                    auth_token: localStorage.getItem('token'),\r\n                    imageName: this.state.imageName,\r\n                    vote: true\r\n                })\r\n\r\n                if (res.status === 200) {\r\n                    // console.log(res.data);\r\n                    this.setState({\r\n                        likes: res.data.likes,\r\n                        dislikes: res.data.dislikes\r\n                    });\r\n                }\r\n            }\r\n            catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n    }\r\n\r\n    handleDislike = async () => {\r\n        if (localStorage.getItem('token')) {\r\n            try {\r\n                var res = await axios.post('/api/imagedata/vote', {\r\n                    auth_token: localStorage.getItem('token'),\r\n                    imageName: this.state.imageName,\r\n                    vote: false\r\n                })\r\n\r\n                if (res.status === 200) {\r\n                    // console.log(res.data);\r\n                    this.setState({\r\n                        likes: res.data.likes,\r\n                        dislikes: res.data.dislikes\r\n                    });\r\n                }\r\n            }\r\n            catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <button className=\"ratingButton\" onClick={this.handleLike}>Like</button>\r\n                <div className='ratingCounter'>{this.state.likes}</div>\r\n                <button className=\"ratingButton\" onClick={this.handleDislike}>Dislike</button>\r\n                <div className='ratingCounter'>{this.state.dislikes}</div>\r\n                <p>Image posted by: {this.state.username}</p>\r\n                <div className=\"commentBar\">Comment Below</div>\r\n                <div className=\"newCommentBox\">\r\n                    <textarea id=\"commentTextArea\" value={this.state.value} className=\"newComment\" placeholder=\"Comment here...\" onChange={this.handleTextAreaChange} />\r\n                    <button className='commentSubmitButton' onClick={this.handleSubmitButton}>Submit</button>\r\n                </div>\r\n                {this.state.comments.map((comment) => <CommentBox key={comment._id} comment={comment} />)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction CommentBox(props) {\r\n    return (\r\n        <div className=\"comment\">\r\n            <div className=\"commentUser\">{props.comment.username}</div>\r\n            <div>{props.comment.comment}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CommentSection;","import React from \"react\";\r\nimport queryString from \"query-string\";\r\nimport axios from \"axios\";\r\n\r\nimport CommentSection from './commentSection';\r\nimport './imagePage.css';\r\n\r\nclass NormalImage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            imageName: queryString.parse(this.props.location.search).name\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.state.imageName);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <img src={'/api/getimage/' + this.state.imageName} className='imageDisplay' />\r\n                <CommentSection imageName={this.state.imageName} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NormalImage;","import React from \"react\";\r\nimport './myimages.css'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass SmallImage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            linkPath: '/image?name=' + props.src,\r\n            imageName: '/api/getsmall/' + props.src\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Link to={this.state.linkPath}>\r\n                <img src={this.state.imageName} className=\"contentThumbnail\" />\r\n            </Link>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SmallImage;","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport io from \"socket.io-client\";\r\n\r\nimport SmallImage from './smallImage'\r\nimport './myimages.css'\r\n\r\nclass Homepage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            imageList: null\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getSmallImages();\r\n    }\r\n\r\n    getSmallImages = async () => {\r\n        var newImageList = await axios.get('/api/private/smallimages', {\r\n            headers: {\r\n                'x-auth-token': localStorage.getItem('token')\r\n            }\r\n        });\r\n        console.log(newImageList.data);\r\n        this.setState({ imageList: newImageList.data });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.imageList) {\r\n            return (\r\n                <div className=\"contentContainer\">\r\n                    {this.state.imageList.map((image) => <SmallImage key={image.name} src={image.name} />)}\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <div>Loading...</div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default Homepage;","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nimport axios from 'axios';\r\n\r\nimport Homepage from './components/home/home';\r\nimport Navbar from './components/navbar/navbar';\r\nimport SignUp from './components/signup/SignUp';\r\nimport LogIn from './components/login/Login';\r\nimport Upload from './components/upload/Upload';\r\nimport NormalImage from './components/imageView/normalImage';\r\nimport MyImages from './components/private/myimages';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      isAuth: false\r\n    }\r\n\r\n    this.setAuthTrue = this.setAuthTrue.bind(this);\r\n    this.setAuthFalse = this.setAuthFalse.bind(this);\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    var token = localStorage.getItem('token');\r\n    if (token) {\r\n      try {\r\n        var user = await axios.post('/api/usercontroller/user', {\r\n          auth_token: token\r\n        });\r\n        console.log(user);\r\n        if (user.data) {\r\n          this.setAuthTrue();\r\n        }\r\n      }\r\n      catch (err) {\r\n        // console.log(err.response.status);\r\n        if (err.response.status === 401) {\r\n          this.setAuthFalse();\r\n          localStorage.removeItem('token');\r\n        }\r\n      }\r\n\r\n\r\n    }\r\n  }\r\n\r\n  setAuthTrue = () => {\r\n    this.setState({\r\n      isAuth: true\r\n    });\r\n  }\r\n\r\n  setAuthFalse = () => {\r\n    this.setState({\r\n      isAuth: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Navbar isAuth={this.state.isAuth} setAuthFalse={this.setAuthFalse} />\r\n        <Switch>\r\n          <Route exact path='/' component={Homepage} />\r\n\r\n          <Route exact path='/upload'>\r\n            <Upload isAuth={this.state.isAuth} />\r\n          </Route>\r\n\r\n          <Route exact path='/login'>\r\n            <LogIn setAuthTrue={this.setAuthTrue} />\r\n          </Route>\r\n\r\n          <Route exact path='/signup'>\r\n            <SignUp setAuthTrue={this.setAuthTrue} />\r\n          </Route>>\r\n\r\n          <Route exact path='/image' component={NormalImage} />\r\n\r\n          <Route exact path='/myimages' component={MyImages} />\r\n        </Switch>\r\n      </Router>\r\n    );\r\n  };\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}