let Router,multer,crypto,base64url,sharp,NormalImage,SmallImage;_45d‍.x([["default",()=>_45d‍.o]]);_45d‍.w("express",[["Router",["Router"],function(v){Router=v}]]);_45d‍.w("multer",[["default",["multer"],function(v){multer=v}]]);_45d‍.w("crypto",[["default",["crypto"],function(v){crypto=v}]]);_45d‍.w("base64url",[["default",["base64url"],function(v){base64url=v}]]);_45d‍.w("sharp",[["default",["sharp"],function(v){sharp=v}]]);_45d‍.w("../models/normal-image",[["default",["NormalImage"],function(v){NormalImage=v}]]);_45d‍.w("../models/small-image",[["default",["SmallImage"],function(v){SmallImage=v}]]);








var router = Router();

var storage = multer.diskStorage({
    destination: function (req, file, cb) {
        cb(null, 'uploads/originals/')
    },
    filename: function (req, file, cb) {
        cb(null, file.fieldname + '-' + base64url(crypto.randomBytes(8)) + Date.now() + file.originalname)
    }
})

var upload = multer({ storage: storage });

router.post('/', upload.single('image'), async function (req, res, next) {
    // console.log(req.file);

    try {

        var smallPath = 'uploads/smalls/' + req.file.filename;

        sharp(req.file.path)
            .resize(150, 150)
            .toFile(smallPath)

        var newNormalImage = new NormalImage({
            name: req.file.filename,
            path: req.file.path
        });

        var newSmallImage = new SmallImage({
            name: req.file.filename,
            path: smallPath
        });

        var promise1 = await newNormalImage.save();
        var promise2 = await newSmallImage.save();

        if (!promise1 || !promise2) {
            throw Error('Something went wrong saving the item');
        }

        res.status(200).json({ name: req.file.filename });
    }
    catch (err) {
        res.status(400).json({ msg: err.message });
    }


});

_45d‍.d(router);