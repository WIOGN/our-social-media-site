{"version":3,"sources":["components/home/smallImage.js","components/home/home.js","components/navbar/LoggedOutNavbar.js","components/signup/SignUp.js","components/login/Login.js","components/upload/Upload.js","components/imageView/commentSection.js","components/imageView/normalImage.js","App.js","serviceWorker.js","index.js"],"names":["SmallImage","props","state","linkPath","src","imageName","to","this","className","React","Component","Homepage","handleSocket","a","socket","io","setState","on","data","imageList","unshift","name","getSmallImages","axios","get","newImageList","console","log","disconnect","map","image","i","key","LoggedOutNavbar","Navbar","Nav","exact","SignUp","placeholder","type","LogIn","Upload","handleImageSelect","event","file","target","files","handleUpload","formdata","FormData","append","post","res","uploadCompleted","alert","onChange","onClick","CommentBox","comment","CommentSection","emit","room","comments","likes","dislikes","handleTextAreaChange","text","value","handleSubmitButton","handleLike","vote","handleDislike","index","NormalImage","queryString","parse","location","search","App","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.931d4258.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './home.css'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass SmallImage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            linkPath: '/image?name=' + props.src,\r\n            imageName: '/api/getsmall/' + props.src\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Link to={this.state.linkPath}>\r\n                <img src={this.state.imageName} className=\"contentThumbnail\" />\r\n            </Link>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SmallImage;","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport io from \"socket.io-client\";\r\n\r\nimport SmallImage from './smallImage'\r\nimport './home.css'\r\n\r\nclass Homepage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            socket: null,\r\n            imageList: null\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.state.socket) {\r\n            this.state.socket.disconnect();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getSmallImages();\r\n        this.handleSocket();\r\n    }\r\n\r\n    handleSocket = async () => {\r\n        var socket = io('/homesystem');\r\n\r\n        this.setState({\r\n            socket: socket\r\n        });\r\n\r\n        socket.on('newUpload', async (data) => {\r\n            var imageList = this.state.imageList;\r\n\r\n            imageList.unshift({ name: data.imageName });\r\n\r\n            this.setState({\r\n                imageList: imageList\r\n            });\r\n\r\n        });\r\n    }\r\n\r\n    getSmallImages = async () => {\r\n        var newImageList = await axios.get('/api/getsmall');\r\n        console.log(newImageList.data);\r\n        this.setState({ imageList: newImageList.data });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.imageList) {\r\n            return (\r\n                <div className=\"contentContainer\">\r\n                    {this.state.imageList.map((image, i) => <SmallImage key={i} src={image.name} />)}\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <div>Loading...</div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default Homepage;","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './LoggedOutNavbar.css'\r\n\r\nfunction LoggedOutNavbar() {\r\n    return (\r\n        <Navbar className='navColor'>\r\n            <Nav className='mr-auto'>\r\n                <NavLink exact to='/' className='nav-link navColorChange'>Home</NavLink>\r\n                <NavLink exact to='/upload' className='nav-link navColorChange'>Upload</NavLink>\r\n            </Nav>\r\n            <Nav>\r\n                <NavLink exact to='/login' className='nav-link navColorChange'>Log In</NavLink>\r\n                <NavLink exact to='/signup' className='nav-link navColorChange'>Sign Up</NavLink>\r\n            </Nav>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default LoggedOutNavbar;","import React from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './SignUp.css';\r\n\r\nclass SignUp extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid h-100\">\r\n                <div className=\"row justify-content-center align-items-center h-100\">\r\n                    <div className=\"col col-sm-6 col-md-6 col-lg-4 col-xl-3 specialBox\">\r\n                        <h3>Sign Up Form</h3>\r\n                        <input className=\"form-control form-control-lg\" placeholder=\"Username\" type=\"text\" />\r\n                        <input className=\"form-control form-control-lg\" placeholder=\"Password\" type=\"password\" />\r\n                        <button className=\"btn-lg btn-block signupButton\">Sign Up</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignUp;","import React from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './Login.css';\r\n\r\nclass LogIn extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid h-100\">\r\n                <div className=\"row justify-content-center align-items-center h-100\">\r\n                    <div className=\"col col-sm-6 col-md-6 col-lg-4 col-xl-3 specialBox\">\r\n                        <h3>Log In Form</h3>\r\n                        <input className=\"form-control form-control-lg\" placeholder=\"Username\" type=\"text\" />\r\n                        <input className=\"form-control form-control-lg\" placeholder=\"Password\" type=\"password\" />\r\n                        <button className=\"btn-lg btn-block loginButton\">Log In</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LogIn;","import React from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './Upload.css'\r\n\r\n\r\nclass Upload extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            file: null,\r\n            uploadCompleted: null\r\n        }\r\n    }\r\n\r\n    handleImageSelect = (event) => {\r\n        this.setState({\r\n            file: event.target.files[0]\r\n        });\r\n    }\r\n\r\n    handleUpload = async () => {\r\n        var formdata = new FormData()\r\n        formdata.append('image', this.state.file)\r\n\r\n        try {\r\n            var res = await axios.post('/api/upload', formdata);\r\n            console.log(res.data.name);\r\n            this.setState({\r\n                uploadCompleted: res.data.name\r\n            });\r\n        }\r\n        catch (err) {\r\n            alert(\"Error occurred while uploading\")\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        if (this.state.uploadCompleted) {\r\n            return <Redirect to={'/image?name=' + this.state.uploadCompleted} />;\r\n        }\r\n\r\n        return (\r\n            <div className=\"container-fluid h-100\">\r\n                <div className=\"row justify-content-center align-items-center h-100\">\r\n                    <div className=\"col col-sm-6 col-md-6 col-lg-4 col-xl-3 specialBox\">\r\n                        <h3>Upload Form</h3>\r\n                        <input type=\"file\" className=\"form-control form-control-lg\" onChange={this.handleImageSelect} />\r\n                        <button className=\"btn-lg btn-block uploadButton\" onClick={this.handleUpload}>Upload</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Upload;","import React from \"react\";\r\nimport io from \"socket.io-client\";\r\n\r\nimport \"./imagePage.css\";\r\n\r\nclass CommentSection extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            imageName: props.imageName,\r\n            likes: null,\r\n            dislikes: null,\r\n            text: null,\r\n            socket: null,\r\n            comments: []\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.state.socket) {\r\n            this.state.socket.disconnect();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleSocket()\r\n    }\r\n\r\n    handleSocket = async () => {\r\n        var socket = io('/commentsystem');\r\n        socket.on('connect', async (data) => {\r\n            socket.emit('joinRoom', { room: this.state.imageName });\r\n        });\r\n        socket.on('newComment', async (data) => {\r\n            var comments = this.state.comments;\r\n            comments.unshift(data);\r\n\r\n            this.setState({\r\n                comments: comments\r\n            })\r\n\r\n        });\r\n        socket.on('OldComment', async (data) => {\r\n            this.setState({\r\n                comments: data\r\n            })\r\n        });\r\n\r\n        socket.on('newVote', async (data) => {\r\n            this.setState({\r\n                likes: data.likes,\r\n                dislikes: data.dislikes\r\n            })\r\n        });\r\n        this.setState({ socket: socket });\r\n    }\r\n\r\n    handleTextAreaChange = async (event) => {\r\n        this.setState({ text: event.target.value });\r\n    }\r\n\r\n    handleSubmitButton = async () => {\r\n        if (this.state.socket) {\r\n            this.state.socket.emit('newComment', { room: this.state.imageName, comment: this.state.text });\r\n        }\r\n    }\r\n\r\n    handleLike = async () => {\r\n        if (this.state.socket) {\r\n            this.state.socket.emit('newVote', { room: this.state.imageName, vote: true });\r\n        }\r\n    }\r\n\r\n    handleDislike = async () => {\r\n        if (this.state.socket) {\r\n            this.state.socket.emit('newVote', { room: this.state.imageName, vote: false });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <button className=\"ratingButton\" onClick={this.handleLike}>Like</button>\r\n                <div className='ratingCounter'>{this.state.likes}</div>\r\n                <button className=\"ratingButton\" onClick={this.handleDislike}>Dislike</button>\r\n                <div className='ratingCounter'>{this.state.dislikes}</div>\r\n                <div className=\"commentBar\">Comment Below</div>\r\n                <div className=\"newCommentBox\">\r\n                    <textarea className=\"newComment\" placeholder=\"Comment here...\" onChange={this.handleTextAreaChange} />\r\n                    <button className='commentSubmitButton' onClick={this.handleSubmitButton}>Submit</button>\r\n                </div>\r\n                {this.state.comments.map((comment, index) => <CommentBox key={index} comment={comment.comment} />)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction CommentBox(props) {\r\n    return (\r\n        <div className=\"comment\">\r\n            <div className=\"commentUser\">Username Suppose to be Here</div>\r\n            <div>{props.comment}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CommentSection;","import React from \"react\";\r\nimport queryString from \"query-string\";\r\n\r\nimport CommentSection from './commentSection';\r\nimport './imagePage.css';\r\n\r\nclass NormalImage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            imageName: queryString.parse(this.props.location.search).name\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.state.imageName);\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <img src={'/api/getimage/' + this.state.imageName} className='imageDisplay' />\r\n                <CommentSection imageName={this.state.imageName} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NormalImage;","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport Homepage from './components/home/home';\nimport LoggedOutNavbar from './components/navbar/LoggedOutNavbar';\nimport SignUp from './components/signup/SignUp';\nimport LogIn from './components/login/Login';\nimport Upload from './components/upload/Upload';\nimport NormalImage from './components/imageView/normalImage';\n\nclass App extends React.Component {\n\n\n  render() {\n    return (\n      <Router>\n        <LoggedOutNavbar />\n        <Switch>\n          <Route exact path='/' component={Homepage} />\n          <Route exact path='/upload' component={Upload} />\n          <Route exact path='/login' component={LogIn} />\n          <Route exact path='/signup' component={SignUp} />\n          <Route exact path='/image' component={NormalImage} />\n        </Switch>\n      </Router>\n    );\n  };\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}