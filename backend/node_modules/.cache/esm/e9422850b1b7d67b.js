let socketio,CommentModel;_b1b‍.x([["default",()=>_b1b‍.o]]);_b1b‍.w("socket.io",[["default",["socketio"],function(v){socketio=v}]]);_b1b‍.w("../models/commentModel",[["default",["CommentModel"],function(v){CommentModel=v}]]);



handleServerSocket = (server) => {
    var io = socketio(server);

    io.on('connection', async (socket) => {
        console.log('a user connected');
        socket.on('disconnect', () => {
            console.log('user disconnected');
        });
        // socket.emit('newComment', { comment: "hello new user" });

        socket.on('joinRoom', async (data) => {
            // console.log(data.room);
            socket.join(data.room);

            try {
                var comments = await CommentModel.find({ imageName: data.room }).sort({ date: -1 });
                // console.log(comments)
                socket.emit('OldComment', comments.map((item) => ({ comment: item.comment })));
            }
            catch (err) {
                socket.emit('OldComment', [])
            }
        });

        socket.on('newComment', (data) => {
            var newComment = new CommentModel({
                imageName: data.room,
                comment: data.comment
            });
            newComment.save();

            io.to(data.room).emit('newComment', { comment: data.comment });
        });

    });
}

_b1b‍.d(handleServerSocket);